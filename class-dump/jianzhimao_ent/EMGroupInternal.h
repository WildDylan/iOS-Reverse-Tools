//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "XMPPDelegate.h"
#import "XMPPRoomDelegate.h"
#import "XMPPStreamDelegate.h"

@class EMGroup, EMGroupOccupantMap, EMGroupStyleSetting, EMSemaphoreTracker, NSArray, NSString, XMPPChatroomConfigInfo, XMPPRoom;

@interface EMGroupInternal : NSObject <XMPPDelegate, XMPPRoomDelegate, XMPPStreamDelegate>
{
    _Bool _isDestroyingOrLeavingGroup;
    NSString *_groupId;
    NSString *_groupSubject;
    NSString *_groupDescription;
    struct dispatch_queue_s *_group_queue;
    EMSemaphoreTracker *_semaphoreTracker;
    id <IUsernameConverter> _usernameConverter;
    XMPPChatroomConfigInfo *_configuration;
    XMPPRoom *_xmppRoom;
    struct dispatch_queue_s *_updateInfoQueue;
    _Bool _isChatroom;
    _Bool _isShieldGroup;
    long long _groupOccupantsCount;
    long long groupOnlineOccupantsCount;
    EMGroupStyleSetting *_groupSetting;
    NSString *_owner;
    NSArray *_admins;
    NSArray *_members;
    NSArray *_bans;
    EMGroup *_group;
    id <EMGroupDelegate> _delegate;
    NSObject *_updateLock;
    EMGroupOccupantMap *_occupantMap;
}

@property(retain, nonatomic) EMGroupOccupantMap *occupantMap; // @synthesize occupantMap=_occupantMap;
@property(readonly, nonatomic) _Bool isShieldGroup; // @synthesize isShieldGroup=_isShieldGroup;
@property(retain, nonatomic) NSObject *updateLock; // @synthesize updateLock=_updateLock;
@property(nonatomic) _Bool isChatroom; // @synthesize isChatroom=_isChatroom;
@property(retain, nonatomic) XMPPRoom *xmppRoom; // @synthesize xmppRoom=_xmppRoom;
@property(retain, nonatomic) XMPPChatroomConfigInfo *configuration; // @synthesize configuration=_configuration;
@property(retain, nonatomic) id <IUsernameConverter> usernameConverter; // @synthesize usernameConverter=_usernameConverter;
@property(retain, nonatomic) EMSemaphoreTracker *semaphoreTracker; // @synthesize semaphoreTracker=_semaphoreTracker;
@property(nonatomic) struct dispatch_queue_s *group_queue; // @synthesize group_queue=_group_queue;
@property(nonatomic) __weak id <EMGroupDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) __weak EMGroup *group; // @synthesize group=_group;
@property(retain, nonatomic) NSArray *bans; // @synthesize bans=_bans;
@property(retain, nonatomic) NSArray *members; // @synthesize members=_members;
@property(retain, nonatomic) NSArray *admins; // @synthesize admins=_admins;
@property(retain, nonatomic) NSString *owner; // @synthesize owner=_owner;
@property(nonatomic) long long groupOnlineOccupantsCount; // @synthesize groupOnlineOccupantsCount;
- (void).cxx_destruct;
- (void)cancelPendingOperations;
- (id)occupantWithUsername:(id)arg1;
- (void)addOccupantToMap:(id)arg1;
- (void)xmppRoom:(id)arg1 didNotSearchRoomInfo:(id)arg2;
- (void)xmppRoom:(id)arg1 didSearchRoomInfo:(id)arg2;
- (id)searchGroup;
- (void)xmppRoom:(id)arg1 didNotConfigure:(id)arg2;
- (void)xmppRoom:(id)arg1 didConfigure:(id)arg2;
- (void)xmppRoom:(id)arg1 didFetchConfigurationForm:(id)arg2;
- (void)xmppRoomDidCreate:(id)arg1;
- (id)createAnonymousGroupWithSubject:(id)arg1 description:(id)arg2 nickname:(id)arg3 initialWelcomeMessage:(id)arg4 styleSetting:(id)arg5;
- (id)createGroupWithSubject:(id)arg1 description:(id)arg2 initialInvitees:(id)arg3 initialWelcomeMessage:(id)arg4 styleSetting:(id)arg5;
- (id)_updateConfigurationForm:(id)arg1;
- (void)_setIntValue:(int)arg1 forNode:(id)arg2 inFields:(id)arg3;
- (void)_setBooleanValue:(_Bool)arg1 forNode:(id)arg2 inFields:(id)arg3;
- (void)_setStringValue:(id)arg1 forNode:(id)arg2 inFields:(id)arg3;
- (id)_findField:(id)arg1 inFields:(id)arg2;
- (id)_createGroupWithSubject:(id)arg1 description:(id)arg2 initialInvitees:(id)arg3 nickname:(id)arg4 isAnonymous:(_Bool)arg5 initialWelcomeMessage:(id)arg6 styleSetting:(id)arg7;
- (void)xmppRoom:(id)arg1 didNotFetchOccupants:(id)arg2 forType:(id)arg3;
- (void)xmppRoom:(id)arg1 didFetchOccupants:(id)arg2 forType:(id)arg3;
- (id)fetchGroupOwner;
- (id)fetchGroupBans;
- (id)fetchOccupantsList;
- (void)xmppRoom:(id)arg1 didNotUpdateRoomInfo:(id)arg2;
- (void)xmppRoom:(id)arg1 didUpdateRoomInfo:(id)arg2 includesOccupants:(_Bool)arg3;
- (id)fetchGroupInfoWithOccupants:(_Bool)arg1;
- (void)_updateGroupOccupantsFromOccupantDictionaries:(id)arg1;
- (void)_updateGroupInfoFromHttpResponse:(id)arg1;
- (id)fetchGroupInfo;
- (void)_updateGroupOccupantsWithOnlyOwner:(_Bool)arg1;
- (void)xmppRoom:(id)arg1 didNotChangeDescription:(id)arg2;
- (void)xmppRoom:(id)arg1 didChangeDescription:(id)arg2;
- (id)changeDescription:(id)arg1;
- (void)xmppRoom:(id)arg1 didNotChangeRoomName:(id)arg2;
- (void)xmppRoom:(id)arg1 didChangeRoomName:(id)arg2;
- (id)changeSubject:(id)arg1;
- (void)xmppRoom:(id)arg1 didNotUnblockOccupants:(id)arg2;
- (void)xmppRoom:(id)arg1 didUnblockOccupants:(id)arg2;
- (void)xmppRoom:(id)arg1 didNotUnblockOccupant:(id)arg2;
- (void)xmppRoom:(id)arg1 didUnblockOccupant:(id)arg2;
- (id)unblockOccupants:(id)arg1;
- (id)unblockOccupant:(id)arg1;
- (void)xmppRoom:(id)arg1 didNotBlockOccupants:(id)arg2;
- (void)xmppRoom:(id)arg1 didBlockOccupants:(id)arg2;
- (void)xmppRoom:(id)arg1 didNotBlockOccupant:(id)arg2;
- (void)xmppRoom:(id)arg1 didBlockOccupant:(id)arg2;
- (id)blockOccupants:(id)arg1;
- (id)blockOccupant:(id)arg1;
- (void)xmppRoom:(id)arg1 didNotKickOccupants:(id)arg2;
- (void)xmppRoom:(id)arg1 didKickOccupants:(id)arg2;
- (void)xmppRoom:(id)arg1 didNotKickOccupant:(id)arg2;
- (void)xmppRoom:(id)arg1 didKickOccupant:(id)arg2;
- (id)removeOccupants:(id)arg1;
- (void)xmppRoomDidLeave:(id)arg1 reason:(int)arg2;
- (id)destroyGroup;
- (id)exitGroup;
- (id)_checkBeforeExitOrDestroy:(_Bool)arg1;
- (id)invite:(id)arg1 message:(id)arg2;
- (id)applyJoinGroupWithGroupSubject:(id)arg1 message:(id)arg2;
- (void)xmppRoom:(id)arg1 didSucceedToJoinWithElement:(id)arg2;
- (void)xmppRoom:(id)arg1 didFailToJoinWithElement:(id)arg2;
- (id)joinWithNick:(id)arg1;
- (void)xmppRoom:(id)arg1 occupantDidLeave:(id)arg2 withPresence:(id)arg3;
- (void)xmppRoom:(id)arg1 occupantDidJoin:(id)arg2 withPresence:(id)arg3;
- (void)xmppRoom:(id)arg1 didChangeRole:(id)arg2;
- (id)leaveGroup;
- (void)xmppRoom:(id)arg1 didNotChangeAffiliations:(id)arg2;
- (void)xmppRoom:(id)arg1 didChangeAffiliations:(id)arg2;
- (void)xmppRoom:(id)arg1 didNotChangeAffiliation:(id)arg2;
- (void)xmppRoom:(id)arg1 didChangeAffiliation:(id)arg2;
- (id)changeAffiliation:(long long)arg1 forOccupants:(id)arg2;
- (id)changeAffiliation:(long long)arg1 forOccupant:(id)arg2;
- (id)_affiliationForRole:(long long)arg1;
- (id)_errorWithElement:(id)arg1;
- (id)_errorWithIQ:(id)arg1;
- (void)registerNotifications;
- (void)unregisterNotifications;
@property(retain, nonatomic) EMGroupStyleSetting *groupSetting; // @synthesize groupSetting=_groupSetting;
@property(readonly, nonatomic) _Bool isPushNotificationEnabled; // @dynamic isPushNotificationEnabled;
@property(nonatomic) long long groupOccupantsCount; // @synthesize groupOccupantsCount=_groupOccupantsCount;
@property(retain, nonatomic) NSString *groupSubject; // @synthesize groupSubject=_groupSubject;
@property(retain, nonatomic) NSString *groupDescription; // @synthesize groupDescription=_groupDescription;
@property(readonly, nonatomic) NSString *groupId; // @synthesize groupId=_groupId;
- (void)dealloc;
- (id)initWithGroupId:(id)arg1 group:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

