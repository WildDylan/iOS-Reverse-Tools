//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class EMFMDatabaseQueue, NSString;

@interface DXDBManager : NSObject
{
    NSString *_loginAccount;
    EMFMDatabaseQueue *_databaseQueue;
}

+ (id)loadSDKSettingInfo;
+ (id)loadSDKLoginInfo;
+ (id)loadRosterVersionForLoginAccount:(id)arg1;
+ (void)updateRosterVersion:(id)arg1 forLoginAccount:(id)arg2;
+ (void)updateNick:(id)arg1;
+ (void)updateAutoLeaveChatroomWhenLogin:(_Bool)arg1;
+ (void)updateAutoFetchBuddyList:(_Bool)arg1;
+ (void)updateAutoAcceptGroupInvitation:(_Bool)arg1;
+ (void)updateAotoLogin:(_Bool)arg1;
+ (void)updateSettingInfo:(id)arg1;
+ (void)updateLoginInfo:(id)arg1;
+ (void)deleteLoginInfo;
+ (void)closeEasemobDatabase;
+ (id)openEasemobDatabaseWithAccount:(id)arg1;
+ (id)sharedInstance;
@property(retain, nonatomic) NSString *loginAccount; // @synthesize loginAccount=_loginAccount;
@property(retain, nonatomic) EMFMDatabaseQueue *databaseQueue; // @synthesize databaseQueue=_databaseQueue;
- (void).cxx_destruct;
- (_Bool)importBackupDatabase:(id)arg1;
- (id)allMessageForDatabase:(id)arg1;
- (_Bool)replaceRobot:(id)arg1;
- (_Bool)_replaceRobot:(id)arg1 forDB:(id)arg2;
- (id)fetchRobotsForLoginAccount:(id)arg1;
- (id)_robotFromResultSet:(id)arg1;
- (_Bool)deleteAllRobotsForAccount:(id)arg1;
- (_Bool)deleteRobots:(id)arg1;
- (_Bool)deleteRobot:(id)arg1;
- (_Bool)_deleteRobot:(id)arg1 forDB:(id)arg2;
- (_Bool)insertRobots:(id)arg1;
- (_Bool)insertRobot:(id)arg1;
- (_Bool)_insertRobot:(id)arg1 forDB:(id)arg2;
- (id)fetchBuddiesForLoginAccount:(id)arg1;
- (id)_buddyFromResultSet:(id)arg1;
- (_Bool)replaceBuddy:(id)arg1;
- (_Bool)_replaceBuddy:(id)arg1 forDB:(id)arg2;
- (_Bool)deleteAllBuddiesForAccount:(id)arg1;
- (_Bool)deleteBuddies:(id)arg1;
- (_Bool)deleteBuddy:(id)arg1;
- (_Bool)_deleteBuddy:(id)arg1 forDB:(id)arg2;
- (_Bool)insertBuddies:(id)arg1;
- (_Bool)insertBuddy:(id)arg1;
- (_Bool)_insertBuddy:(id)arg1 forDB:(id)arg2;
- (id)fetchIgnoredGroupIdsForAccount:(id)arg1;
- (void)updateIgnoredGroupIds:(id)arg1 forLoginAccount:(id)arg2;
- (id)fetchReceiptsForType:(long long)arg1 forLoginAccount:(id)arg2;
- (id)fetchReceiptsForIDs:(id)arg1 type:(long long)arg2;
- (id)fetchReceiptForID:(id)arg1 type:(long long)arg2;
- (void)replaceReceipts:(id)arg1;
- (_Bool)replaceReceipt:(id)arg1;
- (_Bool)_replaceReceipt:(id)arg1 forDB:(id)arg2;
- (_Bool)deleteAllReceiptsForType:(long long)arg1 forLoginAccount:(id)arg2;
- (void)deleteReceipts:(id)arg1;
- (_Bool)deleteReceipt:(id)arg1;
- (_Bool)_deleteReceipt:(id)arg1 forDB:(id)arg2;
- (_Bool)insertReceipts:(id)arg1;
- (_Bool)insertReceipt:(id)arg1;
- (_Bool)_insertReceipt:(id)arg1 forDB:(id)arg2;
- (id)receiptFromResultSet:(id)arg1;
- (id)fetchAllChatroomsForAccount:(id)arg1;
- (id)fetchChatroomForID:(id)arg1;
- (_Bool)updateChatroomsInfo:(id)arg1;
- (_Bool)updateChatroomInfo:(id)arg1;
- (_Bool)replaceChatroom:(id)arg1;
- (_Bool)deleteAllChatroomsForLoginAccount:(id)arg1;
- (_Bool)deleteChatrooms:(id)arg1 withDeleteConversation:(_Bool)arg2;
- (_Bool)deleteChatroom:(id)arg1 withDeleteConversation:(_Bool)arg2;
- (_Bool)_deleteChatroom:(id)arg1 withDeleteConversation:(_Bool)arg2 forDB:(id)arg3;
- (_Bool)insertChatrooms:(id)arg1;
- (_Bool)insertChatroom:(id)arg1;
- (_Bool)_insertChatroom:(id)arg1 forDB:(id)arg2;
- (id)chatroomFromResultSet:(id)arg1;
- (id)fetchAllGroupsForAccount:(id)arg1;
- (id)fetchGroupForID:(id)arg1;
- (_Bool)updateGroupsInfo:(id)arg1;
- (_Bool)updateGroupInfo:(id)arg1;
- (_Bool)updateGroupInternalInfo:(id)arg1;
- (_Bool)updateGroupBans:(id)arg1;
- (_Bool)updateGroupOccupants:(id)arg1;
- (_Bool)replaceGroup:(id)arg1;
- (_Bool)replaceGroupInternal:(id)arg1;
- (_Bool)deleteAllGroupsForLoginAccount:(id)arg1;
- (_Bool)deleteGroupIds:(id)arg1 withDeleteConversation:(_Bool)arg2;
- (_Bool)deleteGroup:(id)arg1 withDeleteConversation:(_Bool)arg2;
- (_Bool)_deleteGroup:(id)arg1 withDeleteConversation:(_Bool)arg2 forDB:(id)arg3;
- (_Bool)insertGroups:(id)arg1;
- (_Bool)insertGroup:(id)arg1;
- (_Bool)_insertGroup:(id)arg1 forDB:(id)arg2;
- (id)groupFromResultSet:(id)arg1;
- (id)searchMessagesWithCriteria:(id)arg1;
- (id)searchMessagesWithCriteria:(id)arg1 forChatter:(id)arg2;
- (unsigned long long)unreadMessagesCount;
- (unsigned long long)unreadMessagesCountForChatter:(id)arg1;
- (unsigned long long)allMessagesCountForChatter:(id)arg1;
- (unsigned long long)_unreadMessagesCountForChatter:(id)arg1 forDB:(id)arg2;
- (id)fetchMessagesForChatter:(id)arg1 fromTimestamp:(long long)arg2 forLimit:(long long)arg3 forMessageBodyType:(long long)arg4 forLoginAccount:(id)arg5;
- (id)fetchAllMessagesForChatter:(id)arg1 forLoginAccount:(id)arg2;
- (id)fetchMessagesForChatter:(id)arg1 fromTimestamp:(long long)arg2 forLimit:(long long)arg3 forLoginAccount:(id)arg4;
- (id)fetchMessagesForIDs:(id)arg1;
- (id)fetchLatestMessageForChatter:(id)arg1 forLoginAccount:(id)arg2;
- (id)_fetchLatestMessageForChatter:(id)arg1 forDB:(id)arg2;
- (id)fetchLatestReceiveMessageForChatter:(id)arg1 forLoginAccount:(id)arg2;
- (id)fetchMessageForID:(id)arg1;
- (id)_fetchMessageForID:(id)arg1 forDB:(id)arg2;
- (id)messageFromResultSet:(id)arg1;
- (_Bool)replaceMessages:(id)arg1;
- (_Bool)replaceMessage:(id)arg1 forChatter:(id)arg2;
- (_Bool)_replaceMessage:(id)arg1 forDB:(id)arg2;
- (_Bool)updateMessageForID:(id)arg1 toNewID:(id)arg2;
- (_Bool)updateMessageForID:(id)arg1 toBodies:(id)arg2;
- (_Bool)updateMessageForID:(id)arg1 toExt:(id)arg2;
- (_Bool)updateMessageForID:(id)arg1 toState:(long long)arg2;
- (_Bool)updateMessageForID:(id)arg1 toDelivered:(_Bool)arg2;
- (_Bool)updateMessageForID:(id)arg1 toReadAcked:(_Bool)arg2;
- (_Bool)updateAllMessagesForChatter:(id)arg1 toRead:(_Bool)arg2 forLoginAccount:(id)arg3;
- (_Bool)updateMessagesForIDs:(id)arg1 toRead:(_Bool)arg2;
- (_Bool)updateMessageForID:(id)arg1 toRead:(_Bool)arg2;
- (_Bool)deleteAllMessagesForChatter:(id)arg1 forLoginAccount:(id)arg2;
- (_Bool)deleteMessages:(id)arg1;
- (_Bool)deleteMessagesForIDs:(id)arg1;
- (_Bool)deleteMessageForID:(id)arg1;
- (_Bool)insertMessages:(id)arg1 forLoginAccount:(id)arg2;
- (_Bool)insertMessages:(id)arg1 forChatter:(id)arg2 forLoginAccount:(id)arg3;
- (_Bool)insertMessage:(id)arg1 forChatter:(id)arg2 forLoginAccount:(id)arg3;
- (_Bool)_insertMessage:(id)arg1 forDB:(id)arg2;
- (id)fetchAllConversationsForAccount:(id)arg1;
- (id)fetchConversationForChatter:(id)arg1 forLoginAccount:(id)arg2;
- (_Bool)updateConversationForChatter:(id)arg1 toExt:(id)arg2 forLoginAccount:(id)arg3;
- (void)_deleteAllAttachmentsForChatter:(id)arg1;
- (_Bool)updateConversationForChatter:(id)arg1 toUnreadCountEvent:(_Bool)arg2 forLoginAccount:(id)arg3;
- (_Bool)deleteAllConversationsForAccount:(id)arg1 deleteMessages:(_Bool)arg2;
- (_Bool)deleteConversationForChatters:(id)arg1 deleteMessages:(_Bool)arg2 forLoginAccount:(id)arg3;
- (_Bool)deleteConversationForChatter:(id)arg1 deleteMessages:(_Bool)arg2 forLoginAccount:(id)arg3;
- (_Bool)_deleteConversationForChatter:(id)arg1 deleteMessages:(_Bool)arg2 forDB:(id)arg3;
- (_Bool)insertConversations:(id)arg1 forLoginAccount:(id)arg2;
- (_Bool)insertConversation:(id)arg1 forLoginAccount:(id)arg2;
- (_Bool)_insertConversation:(id)arg1 forDB:(id)arg2;
- (id)conversationFromResultSet:(id)arg1;
- (void)_closeEasemobDatabase;
- (void)createRobotTableForDB:(id)arg1;
- (void)createBuddyTableForDB:(id)arg1;
- (void)createProfileTableForDB:(id)arg1;
- (void)createReceiptTableForDB:(id)arg1;
- (void)createChatroomTableForDB:(id)arg1;
- (void)createGroupTableForDB:(id)arg1;
- (void)createConversationTableForDB:(id)arg1;
- (void)createMessageTableForDB:(id)arg1;
- (void)createTables;
- (void)performMigrationIfNecessary;
- (void)setDbVersion:(int)arg1;
- (unsigned long long)dbVersion;
- (id)sdkSettingPlistPath;
- (id)dbDirectoryPath;
@property(readonly, nonatomic) NSString *dbPath;
- (id)init;

@end

