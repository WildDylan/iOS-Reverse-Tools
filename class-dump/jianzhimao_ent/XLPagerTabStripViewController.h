//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "BaseViewController.h"

#import "UIScrollViewDelegate.h"
#import "XLPagerTabStripViewControllerDataSource.h"
#import "XLPagerTabStripViewControllerDelegate.h"

@class NSArray, NSString, UIScrollView;

@interface XLPagerTabStripViewController : BaseViewController <XLPagerTabStripViewControllerDelegate, XLPagerTabStripViewControllerDataSource, UIScrollViewDelegate>
{
    unsigned long long _lastPageNumber;
    double _lastContentOffset;
    unsigned long long _pageBeforeRotate;
    struct CGSize _lastSize;
    _Bool _skipIntermediateViewControllers;
    _Bool _isProgressiveIndicator;
    _Bool _isElasticIndicatorLimit;
    unsigned long long _currentIndex;
    NSArray *_pagerTabStripChildViewControllersForScrolling;
    NSArray *_pagerTabStripChildViewControllers;
    UIScrollView *_containerView;
    id <XLPagerTabStripViewControllerDelegate> _xl_delegate;
    id <XLPagerTabStripViewControllerDataSource> _xl_dataSource;
}

@property _Bool isElasticIndicatorLimit; // @synthesize isElasticIndicatorLimit=_isElasticIndicatorLimit;
@property _Bool isProgressiveIndicator; // @synthesize isProgressiveIndicator=_isProgressiveIndicator;
@property _Bool skipIntermediateViewControllers; // @synthesize skipIntermediateViewControllers=_skipIntermediateViewControllers;
@property(nonatomic) id <XLPagerTabStripViewControllerDataSource> xl_dataSource; // @synthesize xl_dataSource=_xl_dataSource;
@property(nonatomic) id <XLPagerTabStripViewControllerDelegate> xl_delegate; // @synthesize xl_delegate=_xl_delegate;
@property(retain, nonatomic) UIScrollView *containerView; // @synthesize containerView=_containerView;
@property(readonly) NSArray *pagerTabStripChildViewControllers; // @synthesize pagerTabStripChildViewControllers=_pagerTabStripChildViewControllers;
@property(nonatomic) unsigned long long currentIndex; // @synthesize currentIndex=_currentIndex;
- (void).cxx_destruct;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)reloadPagerTabStripView;
- (void)updateContent;
- (double)scrollPercentage;
- (double)pageWidth;
- (unsigned long long)pageForVirtualPage:(long long)arg1;
- (long long)virtualPageForContentOffset:(double)arg1;
- (unsigned long long)pageForContentOffset:(double)arg1;
- (double)offsetForChildViewController:(id)arg1;
- (double)offsetForChildIndex:(unsigned long long)arg1;
- (double)pageOffsetForChildIndex:(unsigned long long)arg1;
- (_Bool)canMoveToIndex:(unsigned long long)arg1;
- (unsigned long long)scrollDirection;
- (void)updateIfNeeded;
- (id)childViewControllersForPagerTabStripViewController:(id)arg1;
- (void)pagerTabStripViewController:(id)arg1 updateIndicatorFromIndex:(long long)arg2 toIndex:(long long)arg3 withProgressPercentage:(double)arg4 indexWasChanged:(_Bool)arg5;
- (void)pagerTabStripViewController:(id)arg1 updateIndicatorFromIndex:(long long)arg2 toIndex:(long long)arg3;
- (void)moveToViewController:(id)arg1 animated:(_Bool)arg2;
- (void)moveToViewController:(id)arg1;
- (void)moveToViewControllerAtIndex:(unsigned long long)arg1 animated:(_Bool)arg2;
- (void)moveToViewControllerAtIndex:(unsigned long long)arg1;
@property(readonly) NSArray *pagerTabStripChildViewControllersForScrolling; // @synthesize pagerTabStripChildViewControllersForScrolling=_pagerTabStripChildViewControllersForScrolling;
- (void)viewDidLayoutSubviews;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)pagerTabStripViewControllerInit;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

